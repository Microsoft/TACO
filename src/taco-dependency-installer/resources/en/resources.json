{
    "UnsupportedDependenciesHeader": "The following dependencies will be skipped because they are not supported. Please install them manually.",
    "_UnsupportedDependenciesHeader.comment": "Message displayed at the top of the list of dependencies that can't be installed by TACO.",
    "UnsupportedMoreInfo": "To install, please see <link>{0}</link>",
    "_UnsupportedMoreInfo.comment": "Message displayed for dependencies that are unsupported, but for which we want to provide additional info. {0} is a URL to a install guide / resource.",
    "DependencyLabel": "<br/>Dependency: <highlight>{0}</highlight>",
    "_DependencyLabel.comment": "Label for the name of a dependency. {0} is the name of the dependency.",
    "DependencyVersion": "Version: {0}",
    "_DependencyVersion.comment": "Label and value for the version of a dependency. {0} is the version of the dependency.",
    "InstallDestination": "Install to: {0}",
    "_InstallDestination.comment": "Label and value for the installation directory of a dependency. {0} is the path where the dependency will be installed.",
    "DependencyLicense": "License terms: <link>{0}</link>",
    "_DependencyLicense.comment": "Label and value for the url to the license terms of a dependency. {0} is the url.",
    "DownloadSize": "Download size: {0} MB (approximately)",
    "_DownloadSize.comment": "Label and value for the estimated download size of the dependency. {0} is the size in MB.",
    "DiskSize": "Disk size: {0} MB (approximately)",
    "_DiskSize.comment": "Label and value for the estimated disk size of the dependency. {0} is the size in MB.",
    "InstallingDependenciesHeader": "<title>The following dependencies will be installed on your system:</title>",
    "_InstallingDependenciesHeader.comment": "Message displayed at the top of the list of dependencies that are going to be installed by TACO",
    "ModifyInstallPaths": "Before proceeding with the installation, you can modify the install location of the dependencies by editing the configuration file located at: {0}",
    "_ModifyInstallPaths.comment": "Message to inform the user of the procedure to change the install location of the dependencies. {0} is the path to a configuration file that contains the installation directories where the dependencies will be installed.",
    "LicenseAgreement": "<br/>Some of the dependencies require a license agreement. By proceeding, you acknowledge having read, understood and accepted the terms and conditions of each license.",
    "_LicenseAgreement.comment": "Message displayed after listing the dependencies that will be installed, when at least one of the dependencies require a license agreement.",
    "InstallationProceedQuestion": "<br/>Do you want to proceed with the installation?",
    "_InstallationProceedQuestion.comment": "Message displayed after listing the dependencies that will be installed.",
    "InstallCompletedSuccessfully": "<success>The third-party dependencies have been installed successfully.</success>",
    "_InstallCompletedSuccessfully.comment": "Message shown after all dependencies have been installed and there are no errors",
    "NothingToInstall": "<br/><success>Dependencies are already installed for your current project.</success>",
    "_NothingToInstall.comment": "Message shown if there are no dependencies to install (everything that we support is already installed).",
    "RestartCommandPrompt": "<br/><warn>Please restart the command prompt to ensure that any newly installed software can be used correctly.</warn>",
    "_RestartCommandPrompt.comment": "Message shown after running the dependency installer if at least 1 dependency was successfully installed.",

    "YesExampleString": "[y/n]: ",
    "_YesExampleString.comment": "When the user gets prompted to type 'yes' to accept a prompt, this will be shown as an example of what the user has to type. This must be localized to exactly the localized YesString string in this file, surrounded with square brackets.",
    "YesString": "y",
    "_YesString.comment": "The string that the user needs to type to confirm various prompts during the installation. This string is not shown to the user; this string is what we use internally to compare with the user's input during prompts. So, even though it is not user facing, it still needs to be localized.",

    "InstallCompletedWithErrors": "There were some errors while installing the third-party dependencies. Please see above for details.",
    "_InstallCompletedWithErrors.comment": "Message shown at the end of the installation run if an error occured for at least one of the dependencies.",

    "AbstractMethod": "This is an abstract method and should be implemented by a derived overload",
    "_AbstractMethod.comment": "Error thrown for an unimplemented method",
    "FileNotFound": "Error: Could not locate the file to download.",
    "_FileNotFound.comment": "Error shown when the URL we use to download a file does not result in a successful HTTP request, probably because our metadata is outdated and the file URL has changed.",
    "NoValidInstallOrder": "Error: Could not establish a valid order in which to install dependencies.",
    "_NoValidInstallOrder.comment": "Error shown when the dependencies that need to be installed have cyclic prerequisites, so it is not possible to install them. For example: installing A requires installing B first, but installing B requires installing A first.",
    "UnsupportedPlatform": "Error: Your current platform is not supported: {0}",
    "_UnsupportedPlatform.comment": "Message printed when running on an operating system that we don't support. {0} is the platform.",
    "InstallationErrors": "There were some errors in the isntallation process. Please see above for details.",
    "_InstallationErrors.comment": "Message shown after all dependencies have been installed and there were errors.",
    "LicenseAgreementRefused": "You have chosen not to proceed. Nothing has been installed on your system.",
    "_LicenseAgreementRefused.comment": "Message shown when the user doesn't type the correct acceptance string when prompted to proceed with the installation.",
    "FileCorruptError": "Error: There is a problem with the downloaded installer file. Please try again later.",
    "_FileCorruptError.comment": "Error shown when the downloaded installer is corrupt or invalid.",
    "ErrorDeletingInstallConfig": "Error: Unable to delete the existing installation configuration file located at {0}.",
    "_ErrorDeletingInstallConfig.comment": "Error shown when there is an exception when attempting to delete the existing install config file. {0} is the path to the config file.",
    "ErrorCreatingInstallConfig": "Error: Unable to create installation configuration file at location {0}.",
    "_ErrorCreatingInstallConfig.comment": "Error shown when there is an exception when attempting to create the install config file. {0} is the path where we are attempting to create the config file.",
    "NoAdminRights": "Error: The installer process could not be launched. Please provide administrator privileges when prompted, or try again from an elevated command prompt.",
    "_NoAdminRights.comment": "Error shown when the installer does not have administrator privileges.",
    "CouldNotConnect": "Error: Could not establish a connection with the installer process. Please try again.",
    "_CouldNotConnect.comment": "Error shown when the installer process fails to connect to TACO for logging purposes.",
    "NoPowershell": "Error: The installer process requires Powershell. Please install Powershell and add it to your Path environment variable.",
    "_NoPowershell.comment": "Error shown if the user does not have Microsoft Powershell on their system.",
    "UnknownExitCode": "Error: The installer process encountered an unknown error. Please try again.",
    "_UnknownExitCode.comment": "Error shown when the exit code of the installer process is not one of the known exit codes.",
    "FatalError": "Error: Could not install the dependencies. Please see above for details.",
    "_FatalError.comment": "Error shown when the installer process encounters an error before it even starts attempting to install the dependencies.",

    "DownloadingLabel": "Downloading...",
    "_DownloadingLabel.comment": "Progress indicator for when a dependency is being downloaded.",
    "InstallingLabel": "Installing...",
    "_InstallingLabel.comment": "Progress indicator for when a dependency is being installed.",
    "ConfiguringLabel": "Configuring (this may take several minutes)...",
    "_ConfiguringLabel.comment": "Progress indicator for when a dependency is being configured after the installation is done.",
    "SettingSystemVariablesLabel": "Updating environment variables...",
    "_SettingSystemVariablesLabel.comment": "Progress indicator for when the environment variables are being configured for the newly installed dependency.",
    "OverwritingVariable": "Overwriting '{0}'...",
    "_OverwritingVariable.comment": "Progress indicator for when taco is overwriting an existin system variable. {0} is the name of the variable.",
    "Success": "<success>Success!</success>",
    "_Success.comment": "Progress indicator for when a dependency is done installing and there were no errors.",

    "SystemVariableExists": "<warn>'{0}' environment variable already exists. Overwriting it may cause your current software to stop working correctly. Not overwriting it may result in your Cordova project not building correctly. Do you want to overwrite the existing '{0}'?</warn>",
    "_SystemVariableExists.comment": "Warning shown when we attempt to set an environment variable, but one with the same name already exists. {0} is the name of the variable.",
    "SystemVariableExistsDarwin": "Cannot set '{0}' environment variable, because it already exists. To ensure Cordova can correctly build your project, please update the '{0}' variable to point to the following location:<br/>{1}",
    "_SystemVariableExistsDarwin.comment": "Warning shown when we attempt to set an environment variable, but one with the same name already exists. {0} is the name of the variable.",
    "SkipOverwriteWarning": "<warn>To ensure your Cordova project builds correctly, please set the '{0}' environment variable to the following value: {1}</warn>",
    "_SkipOverwriteWarning.comment": "Warning shown when the user opts to skip overwriting an existing environment variable. {0} is the variable name, {1} is the value we wanted to set it to.",

    "InstallConfigNotFound": "Error: Installation configuration file not found, please try again: {0}",
    "_InstallConfigNotFound.comment": "Error shown when the install config file does not exist.",
    "InstallConfigMalformed": "Error: Unable to parse the installation configuration file. Please try again.",
    "_InstallConfigMalformed.comment": "Error shown when the install config file is malformed.",
    "UnknownDependency": "Error: Unkown dependency identifier in the installation configuration file: '{0}'. Please try again.",
    "_UnknownDependency.comment": "Error shown when the install config file contains a dependency identifier that we don't understand. {0} is the unknown id.",
    "UnknownVersion": "Error: Unkown version for dependency '{0}' in the installation configuration file: '{1}'. Please try again.",
    "_UnknownVersion.comment": "Error shown when the install config file contains a version that we don't understand for one of the dependencies. {0} is the dependency's id, {1} is the version we don't understand for that dependency.",
    "InvalidInstallPath": "Error: Invalid installation path for dependency '{0}': {1}",
    "_InvalidInstallPath.comment": "Error shown when the install config file contains an installation destination path that is invalid for one of the dependencies. {0} is the dependency's id, {1} is the install path.",
    "PathNotEmpty": "Error: The specified install destination for dependency '{0}' is not empty: {1}",
    "_PathNotEmpty.comment": "Error shown when the install config file contains an installation destination path that exists and is not empty. {0} is the dependency's id, {1} is the install path.",
    "PathNotUnique": "Error: '{0}' has the same install destination as '{1}'.",
    "_PathNotUnique.comment": "Error shown when 2 dependencies have the same install destination in the install configuration file. {0} and {1} are the display names of the 2 dependencies that have the same install destination.",
    "CouldNotRunInstaller": "Error: The installer '{0}' didn't exit cleanly. Exit code: {1}",
    "_CouldNotRunInstaller.comment": "Error shown when there was an error executing a dependency's installer file. {0} is the path to the installer executable, {1} is the error name.",
    "InstallerError": "Error: The installer '{0}' didn't exit cleanly. Exit code: {1}",
    "_UnableToRunInstaller.comment": "Error shown when executing a dependency's installer yields a non-0 exit code. {0} is the path to the installer executable, {1} is the exit code.",
    "UnableToSetVariable": "Error: Unable to set '{0}' system environment variable (error code: {1}). Please set the '{0}' environment variable to the following value: {2}",
    "_UnableToSetVariable.comment": "Error shown when the installer process fails to set a system environment variable. {0} is the variable name, {1} is the error code that was given when trying to set the variable, and {2} is the value the variable should be set to.",
    "NeedInstallDestination": "Error: An installation destination is needed for this dependency. Please make sure there is an install path in the installation configuration file.",
    "_NeedInstallDestination.comment": "Error shown when a dependency needs an install destination, but the install config file didn't contain one"
}
